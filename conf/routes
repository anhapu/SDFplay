# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# User
POST  /user/login             controllers.UserController.login()
GET   /user/logout            controllers.UserController.logout()
GET   /user/:id               controllers.UserController.showProfile(id: Long)
GET   /user/editProfile/:id   controllers.UserController.editProfile(id: Long)
POST  /user/editProfile/:id   controllers.UserController.saveProfile(id: Long)
GET   /user/editPassword/:mystery  controllers.UserController.editPassword(mystery: String)
POST  /user/editPassword/:mystery  controllers.UserController.savePassword(mystery: String)

#POST /user/register      controllers.UserController.register()
GET   /registration       controllers.Registration.index()
POST  /registration       controllers.Registration.submit()
POST	/forgotPassword     controllers.UserController.sendRecoveryMail()
GET  /passwordRecovery/:token controllers.UserController.checkPasswordRecoveryToken(token: String)

# User Administration
GET	/userAdministration controllers.UserAdministrationController.index()

# Home page
GET   /                   controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET   /assets/*file       controllers.Assets.at(path="/public", file)

#Book
GET     /book/details/:id       controllers.BookController.getBook(id: Long)
GET     /book/:id/bookshelf     controllers.BookController.showBookshelf(id: Long)
GET     /book/mybookshelf     controllers.BookController.myBookshelf()
GET     /book/:id/showcase      controllers.BookController.getShowcase(id: Long)
GET     /book/:id/tradeable     controllers.BookController.markAsTradeable(id: Long)
GET     /book/:id/nottradeable  controllers.BookController.unmarkAsTradeable(id: Long)
GET     /book/searchResults     controllers.BookController.searchBook(s ?= "title", f ?= "")
# GET     /book                   controllers.BookController.index()
GET     /book/add               controllers.BookController.addBook()
POST    /book/edit/:bookId       controllers.BookController.editBook(bookId: Long)
POST    /book/addBook/       controllers.BookController.createBook()
GET     /book/delete/:bookId    controllers.BookController.deleteBook(bookId: Long)


#Trade
POST	/trade/create/:recipientId	controllers.TradeController.init(recipientId: Long)
